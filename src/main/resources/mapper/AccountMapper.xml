<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gogoyang.rpgapi.meta.account.dao.AccountDao">

    <resultMap id="accountMap" type="com.gogoyang.rpgapi.meta.account.entity.Account">
        <result property="accountId" column="account_id"/>
        <result property="userId" column="user_id"/>
        <result property="createdTime" column="created_time"/>
        <result property="jobId" column="job_id"/>
        <result property="userName" column="user_name"/>
        <result property="jobTitle" column="job_title"/>
    </resultMap>

    <select id="createAccount" parameterType="com.gogoyang.rpgapi.meta.account.entity.Account">
        insert into account
        (account_id, user_id, created_time, amount, type, remark, job_id)
        values
        (#{accountId}, #{userId}, #{createdTime}, #{amount}, #{type}, #{remark}, #{jobId})
    </select>

    <select id="getAccount" parameterType="java.lang.String" resultType="accountMap">
        select account.ids,
           account_id,
           account.user_id,
           real_name as user_name,
           account.created_time,
           amount,
           type,
           remark,
           account.job_id,
           title as job_title
           from account
        left join user_info user on account.user_id=user.user_id
        left join job on account.job_id=job.job_id
        where account_id=#{accountId}
    </select>

    <select id="listAccount" parameterType="map" resultType="accountMap">
        select account.ids,
       account_id,
       account.user_id,
       real_name as user_name,
       account.created_time,
       amount,
       type,
       remark,
       account.job_id,
       title as job_title
       from account
left join user_info user on account.user_id=user.user_id
left join job on account.job_id=job.job_id
where 1=1
        <choose>
            <when test="userId!=null">
                and account.user_id=#{userId}
            </when>
        </choose>
        <choose>
            <when test="jobId!=null">
                and account.job_id=#{jobId}
            </when>
        </choose>
and account.user_id=''
and account.job_id=''
order by ids desc
limit 0,1
    </select>

    Account getAccount(Map qIn);

    ArrayList<Account> listAccount(Map qIn);




</mapper>